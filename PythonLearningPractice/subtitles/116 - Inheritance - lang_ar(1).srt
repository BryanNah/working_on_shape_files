1
00:00:00,490 --> 00:00:02,190
لذلك، بما أننا نعرف قليلًا عن

2
00:00:02,190 --> 00:00:05,360
فئة المتغيرات، سواء تلك التي أنشأناها

3
00:00:05,360 --> 00:00:09,360
والتي تأتي بشكل افتراضي أو محددة مسبقًا في فئات
Python،

4
00:00:09,360 --> 00:00:11,340
أريد أن أتوقف لحظة للحديث عن

5
00:00:11,340 --> 00:00:15,290
الفكرة الكبيرة التالية في البرمجة الموجهة للعناصر
والتي تسمى

6
00:00:15,290 --> 00:00:18,660
توريث. الآن، دعونا نفكر في معنى هذه الكلمة

7
00:00:18,660 --> 00:00:23,110
"توريث" وكيف نستخدمها في اللغة الإنجليزية.

8
00:00:23,110 --> 00:00:25,570
كنت قد سمعت شخص يقول أن الطفل يمكن

9
00:00:25,570 --> 00:00:29,460
أن يرث بعض الصفات من والديهم.  أشياء مثل الاسم
الأخير،

10
00:00:29,460 --> 00:00:32,369
 لون العين، وبعض المال، وإذا كان الطفل

11
00:00:32,369 --> 00:00:34,940
محظوظًا. لذلك، إذا كان علينا أن نأخذ هذا المعنى من

12
00:00:34,940 --> 00:00:38,110
كلمة توريث، مثل الذي نستخدمه عادة في اللغة الإنجليزية،

13
00:00:38,110 --> 00:00:40,330
وتحويلها إلى كود أو نموذج من حيث

14
00:00:40,330 --> 00:00:43,890
البرمجة، سنقوم بإنشاء فئة تسمى الأب.  التي

15
00:00:43,890 --> 00:00:47,530
سيكون لها بعض الصفات مثل الاسم الأخير ولون العين. 

16
00:00:47,530 --> 00:00:50,740
ومن ثم سنقوم بعمل فئة تسمى فئة الطفل التي من شأنها

17
00:00:50,740 --> 00:00:54,140
أن ترث هذين الأمرين من الفئة الأب.

18
00:00:54,140 --> 00:00:57,010
بالإضافة إلى ذلك، يمكن أن يكون للطفل فئة متغير آخر
من

19
00:00:57,010 --> 00:01:00,570
تلقاء نفسه يسمى عدد الألعاب.  الآن، قد

20
00:01:00,570 --> 00:01:03,670
تلاحظ أنه إذا قمنا بتصميم تعليمة برمجية مثل هذا،
نحن

21
00:01:03,670 --> 00:01:06,820
بالفعل بدأنا إعادة استخدام التعليمات البرمجية، وهي

22
00:01:06,820 --> 00:01:10,270
ميزة كبيرة من البرمجة الموجهة للعناصر. حسنًا، فإن
الشيء التالي

23
00:01:10,270 --> 00:01:12,340
الذي سنقوم به هو اتخاذ تصميمنا

24
00:01:12,340 --> 00:01:15,190
وتحويله إلى تعليمات برمجية فعلية. دعونا نفعل ذلك
فيما بعد.

