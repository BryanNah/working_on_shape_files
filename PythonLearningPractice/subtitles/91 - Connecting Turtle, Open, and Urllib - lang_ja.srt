1
00:00:00,440 --> 00:00:03,300
プロジェクトを終わりにする前に

2
00:00:03,300 --> 00:00:08,300
今までのレッスンで見てきた考え方を
おさらいしましょう

3
00:00:08,300 --> 00:00:11,290
四角を作ることから始めて

4
00:00:11,290 --> 00:00:15,890
brad＝turtle．Turtle（）というコードを書きました

5
00:00:15,890 --> 00:00:18,090
この裏で行われていたのは

6
00:00:18,090 --> 00:00:22,818
Turtleクラスのオブジェクトまたは
インスタンスの作成でした

7
00:00:22,818 --> 00:00:26,820
このインスタンスはbrad．forwardのようなものです

8
00:00:26,820 --> 00:00:29,730
次にコンピュータ上のファイルから

9
00:00:29,730 --> 00:00:31,960
内容を読み込みました

10
00:00:31,960 --> 00:00:36,300
quotes＝open（ファイルのパス）と書いて
ファイルを開きました

11
00:00:36,300 --> 00:00:38,422
裏で実行されていたのは

12
00:00:38,422 --> 00:00:42,070
ファイルオブジェクトの作成です

13
00:00:42,070 --> 00:00:46,560
これはquotes．readと同じようなオブジェクトです

14
00:00:46,560 --> 00:00:49,460
インターネット上のサイトにアクセスするために

15
00:00:49,460 --> 00:00:54,270
connection＝urllib．urlopen（）というコードを
書きました

16
00:00:54,270 --> 00:00:58,930
このコードはファイルのようなオブジェクトや
インスタンスを返します

17
00:00:58,930 --> 00:01:00,210
このインスタンスは

18
00:01:00,210 --> 00:01:04,900
connection．readと同じようなことを行いました

19
00:01:04,900 --> 00:01:08,600
3つの事例でインスタンスやオブジェクトを作りました

20
00:01:08,600 --> 00:01:11,373
そしてオブジェクトを使いました

21
00:01:11,373 --> 00:01:16,620
暴言チェックに使ったのはすべて関数です

22
00:01:16,620 --> 00:01:19,650
openやurlopenのような関数を使い

23
00:01:19,650 --> 00:01:24,890
turtleの事例で見たクラスはありませんでした

24
00:01:24,890 --> 00:01:30,420
暴言チェックにはクラスを
使用していなかったように見えます

25
00:01:30,420 --> 00:01:35,950
Pythonでopenやurlopenのような関数が
どのように実装されるかを見れば

26
00:01:35,950 --> 00:01:42,580
オブジェクトを返すために
関数のようなinitクラスが呼ばれることが分かります

27
00:01:43,660 --> 00:01:46,730
クラスの使用事例をもう1つ見てみましょう

28
00:01:46,730 --> 00:01:49,820
あとでよく分かるようになります

