1
00:00:00,350 --> 00:00:02,300
我们首先来回顾一下这个称为

2
00:00:02,300 --> 00:00:05,305
实例变量的东西

3
00:00:05,305 --> 00:00:08,365
在类 Movie 中 存在好几个实例变量

4
00:00:08,365 --> 00:00:12,700
包括名称、故事情节、海报图片链接和 YouTube 预告片链接

5
00:00:12,700 --> 00:00:16,309
现在 进一步回想 这些变量都与

6
00:00:16,309 --> 00:00:19,390
我们创建的每个实例相关

7
00:00:19,390 --> 00:00:22,550
例如 Toy Story (玩具总动员) 和 Avatar (阿凡达)

8
00:00:22,550 --> 00:00:25,570
自身都有这些对应的变量副本 所以

9
00:00:25,570 --> 00:00:27,970
我可以打印出 Toy Story 的故事情节

10
00:00:27,970 --> 00:00:32,470
也可以打印出 Avatar 的故事情节 但是 有时候我们需要

11
00:00:32,470 --> 00:00:35,040
所有实例共享的变量

12
00:00:35,040 --> 00:00:39,170
比如变量 valid_ratings (电影评级)

13
00:00:39,170 --> 00:00:41,940
该变量是一个数组或列表

14
00:00:41,940 --> 00:00:45,200
包括了所有可能的电影评级 如果你说

15
00:00:45,200 --> 00:00:48,180
这是 Toy Story 的评级 那是

16
00:00:48,180 --> 00:00:51,090
Avatar 的评级 就说不太通了

17
00:00:51,090 --> 00:00:53,660
基本上 所有实例的评级

18
00:00:53,660 --> 00:00:58,030
都是一样的 因此 这个变量是跟类 Movie

19
00:00:58,030 --> 00:01:02,000
相关的 所以这些变量称为“类变量”

20
00:01:02,000 --> 00:01:04,420
我们在操作中看一看 这是我们类 Movie 的

21
00:01:04,420 --> 00:01:07,640
代码 而在这个 Python 文件后面

22
00:01:07,640 --> 00:01:10,240
是我们创建的其他 Python 文件 在那里

23
00:01:10,240 --> 00:01:12,880
我们创建了一大堆电影实例 首先我要对

24
00:01:12,880 --> 00:01:16,390
我的类 Movie 进行更改 在这里

25
00:01:16,390 --> 00:01:20,690
我要定义一个叫做 valid_ratings 的变量 请注意

26
00:01:20,690 --> 00:01:23,940
变量 valid_ratings 是在类层面

27
00:01:23,940 --> 00:01:27,560
进行定义的 在 init 函数之外

28
00:01:27,560 --> 00:01:30,140
要开始使用这个变量 我们

29
00:01:30,140 --> 00:01:33,180
首先要保存这个文件 接下来我要

30
00:01:33,180 --> 00:01:35,510
进入我的另一个 Python 文件 顺便说一句 这是

31
00:01:35,510 --> 00:01:37,764
我们定义一大堆电影实例的文件

32
00:01:37,764 --> 00:01:41,400
在这里 我要向下一直滚动

33
00:01:41,400 --> 00:01:43,680
到最底部 然后注释掉所有的

34
00:01:43,680 --> 00:01:46,370
打印或输出语句 这样

35
00:01:46,370 --> 00:01:51,330
我就可以专注于 valid_ratings 了 现在 我要键入 print

36
00:01:51,330 --> 00:01:57,420
我的类名 media.Movie 后面跟上

37
00:01:57,420 --> 00:02:01,550
变量名 valid_ratings

38
00:02:01,550 --> 00:02:05,350
来尝试打印出变量 valid_ratings 的值 好了

39
00:02:06,830 --> 00:02:10,910
我保存一下 然后运行 哇哦 出来啦

40
00:02:10,910 --> 00:02:14,450
我的所有电影评级的列表

41
00:02:14,450 --> 00:02:16,860
请注意我们是如何使用类名 movie 来访问

42
00:02:16,860 --> 00:02:20,130
此变量的 我是说类 movie 的所有实例

43
00:02:20,130 --> 00:02:24,190
Toy Story、Avatar 和其他电影 它们可以共享这个

44
00:02:24,190 --> 00:02:26,370
列表 它们可以共享这个列表来查看

45
00:02:26,370 --> 00:02:29,820
各自的评级是否是有效的 好的

46
00:02:29,820 --> 00:02:31,940
我最后要做的一件事是

47
00:02:31,940 --> 00:02:34,790
返回我的类 movie 请注意

48
00:02:34,790 --> 00:02:39,170
此变量 valid_strings 的值可能是个常量

49
00:02:39,170 --> 00:02:41,570
我的意思是说这个变量可能

50
00:02:41,570 --> 00:02:44,390
不会经常改变 当我们定义

51
00:02:44,390 --> 00:02:47,480
这样一个常量时 Google 的《Python 风格指南》

52
00:02:47,480 --> 00:02:50,360
建议我们全部使用大写字母

53
00:02:50,360 --> 00:02:53,750
或一个大写字母 现在我

54
00:02:53,750 --> 00:02:56,970
保存这个文件 然后返回至

55
00:02:56,970 --> 00:03:05,450
我的另一个 Python 文件 也更改一下那里的变量名

56
00:03:05,450 --> 00:03:08,410
我来保存并运行一下这个程序 看看它是否可行

57
00:03:08,410 --> 00:03:12,720
好啦 我又一次获得了正确的输出

