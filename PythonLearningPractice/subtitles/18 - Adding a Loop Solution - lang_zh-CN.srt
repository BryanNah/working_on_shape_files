1
00:00:00,410 --> 00:00:03,590
这是一种可采用的方法 比方说 我想要在一天内

2
00:00:03,590 --> 00:00:06,970
休息三次 我会用 break_count 变量来

3
00:00:06,970 --> 00:00:10,170
跟踪我已经休息的次数 接着

4
00:00:10,170 --> 00:00:12,910
添加一个 while 循环来确保这个代码运行三次

5
00:00:12,910 --> 00:00:15,810
顺便一提 如果你想看有关于

6
00:00:15,810 --> 00:00:18,710
while 循环如何工作的信息 在讲师注释有一个

7
00:00:18,710 --> 00:00:22,080
对你有用的链接 现在 如果我运行这个程序 程序会等待

8
00:00:22,080 --> 00:00:27,280
十秒钟 然后播放歌曲 并重复这个行为三次

9
00:00:27,280 --> 00:00:30,350
另一个方便的添加指令可以使程序

10
00:00:30,350 --> 00:00:34,400
显示一个说明 告诉我们什么时候程序会开始启动 现在

11
00:00:34,400 --> 00:00:36,370
我该如何找出当前的时间呢？当我必须

12
00:00:36,370 --> 00:00:38,900
做一些像这样的测试时 我开始用这个

13
00:00:38,900 --> 00:00:42,650
输出窗口 所以我可以在这里导入 time

14
00:00:42,650 --> 00:00:45,830
你猜对了 这是一种访问时间的方法 然后

15
00:00:45,830 --> 00:00:48,470
我知道里面有一个叫 ctime 的函数 表示 current time (当前时间)

16
00:00:48,470 --> 00:00:53,230
那好像是在我的电脑上的当前时间 太好了

17
00:00:53,230 --> 00:00:58,260
回到刚刚我在程序中加入这个的地方 让我保存并运行这个程序

18
00:01:00,300 --> 00:01:04,720
现在 当我运行程序时 立即得到了一个提示 告诉我程序将在何时启动

19
00:01:04,720 --> 00:01:10,488
十秒钟之后 视频便开始播放

20
00:01:10,488 --> 00:01:15,882
并告诉我要休息一会

21
00:01:15,882 --> 00:01:17,120
[音乐]

22
00:01:17,120 --> 00:01:19,970
目前看上去一切皆运行良好 另一个十秒之后

23
00:01:19,970 --> 00:01:26,190
又一个提示告诉我得休息一会了

24
00:01:28,240 --> 00:01:28,610
[音乐]

25
00:01:28,610 --> 00:01:30,150
现在 如果我想要在半途停止程序

26
00:01:30,150 --> 00:01:34,280
我可以重启 IDLE  或者在 shell 窗口中

27
00:01:34,280 --> 00:01:36,710
用 Ctrl+C 来暂停程序运行

28
00:01:36,710 --> 00:01:38,400
让它在后台暂时沉睡

