1
00:00:00,390 --> 00:00:02,810
حتى الآن، شاهدنا مثالين على

2
00:00:02,810 --> 00:00:07,010
الفئات. المثال الأول، عندما رسمنا أشكالاً باستخدام Turtles. ثم

3
00:00:07,010 --> 00:00:08,920
المثال الثاني، عندما أرسلنا رسائل

4
00:00:08,920 --> 00:00:13,710
.نصية باستخدام Twilio. الآن، عندما أنشأنا أشكالاً باستخدام Turtle

5
00:00:13,710 --> 00:00:16,090
احتفظنا بسطر من الكود يتضمن، brad

6
00:00:16,090 --> 00:00:19,880
يساوي ()turtle.Turtle. ما نحاول عمله الآن من خلال

7
00:00:19,880 --> 00:00:21,840
هذا السطر من الكود هنا، هو

8
00:00:21,840 --> 00:00:26,580
أنه داخل Python، يوجد ملف يسمى turtle، وداخل

9
00:00:26,580 --> 00:00:29,640
ذلك الملف توجد فئة تسمى turtle. هذا

10
00:00:29,640 --> 00:00:31,720
ما نتحدث عنه. وعندما نحاول الوصول إلى تلك

11
00:00:31,720 --> 00:00:35,180
الفئة باستخدام هذه العبارة، وخاصة مع استخدام أقواس الفتح

12
00:00:35,180 --> 00:00:37,950
والإغلاق. ما نقوم به خلف الكواليس هو

13
00:00:37,950 --> 00:00:41,290
طلب دالة init المعرفة داخل الفئة. وما

14
00:00:41,290 --> 00:00:44,360
تقوم دالة init بعمله هو تهيئة أو

15
00:00:44,360 --> 00:00:47,910
إنشاء مساحة في الذاكرة لمثيل جديد، والذي

16
00:00:47,910 --> 00:00:51,720
نسميه brad. Brad كائن أو مثيل

17
00:00:51,720 --> 00:00:55,020
للفئة turtle. هذا المثيل brad، يمكن أن يقوم

18
00:00:55,020 --> 00:00:57,880
،بعد ذلك بعمل أمور معرفة داخل فئة turtle، مثل

19
00:00:57,880 --> 00:01:01,440
تحريك السلحفاة للأمام. وبصورة مشابهة، عندما نقوم بكتابة

20
00:01:01,440 --> 00:01:03,940
سطر في الكود والذي يوضح أن client

21
00:01:03,940 --> 00:01:07,950
يساوي ()rest.TwilioRestCclient. ما نحاول أن نقوله في الواقع

22
00:01:07,950 --> 00:01:10,900
هو أنه بداخل Twilio، يوجد

23
00:01:10,900 --> 00:01:14,630
،مجلد يسمى rest. وداخل ذلك المجلد

24
00:01:14,630 --> 00:01:16,920
يوجد ملف Python من فئة تسمى

25
00:01:16,920 --> 00:01:20,600
TwilioRestClient. والآن عندما نقوم باستدعاء هذا

26
00:01:20,600 --> 00:01:22,780
السطر الموجود في الكود، التي تتيح لنا الوصول إلى

27
00:01:22,780 --> 00:01:26,980
،الفئة ()TwilioRestClient، مع هذه الأقواس المفتوحة والمغلقة

28
00:01:26,980 --> 00:01:28,945
ما نقوم به بالفعل هو طلب

29
00:01:28,945 --> 00:01:33,450
الدالة init. المعرفة داخل تلك الفئة TwilioRestClient. وما

30
00:01:33,450 --> 00:01:35,450
تقوم به هذه الدالة الموجودة داخلها، هو مرة أخرى

31
00:01:35,450 --> 00:01:39,080
،تهيئة أو إنشاء مساحات في الذاكرة

32
00:01:39,080 --> 00:01:42,970
.لكائن أو مثيل لتلك الفئة TwilioRestClient

33
00:01:42,970 --> 00:01:46,080
ونسمي ذلك الكائن، client. هذا الكائن المسمى

34
00:01:46,080 --> 00:01:49,050
client، يمكن أن يقوم بعد ذلك بأمور معرفة داخل تلك

35
00:01:49,050 --> 00:01:54,780
الفئة، TwillioRestClient، مثل إرسال رسائل نصية قصيرة أو نصوص. وكملخص

36
00:01:54,780 --> 00:01:57,390
لذلك. يمكنكم أن تفكروا في الفئة

37
00:01:57,390 --> 00:02:00,390
كمخطط أولي لمبنى. يحتوي هذا

38
00:02:00,390 --> 00:02:02,690
المخطط الأولي على معلومات معينة عن

39
00:02:02,690 --> 00:02:04,700
المبنى، مثل عدد الغرف في

40
00:02:04,700 --> 00:02:07,900
.المبنى، والمنطقة الموجودة تحت المبنى، وغيرها من التفاصيل

41
00:02:07,900 --> 00:02:10,620
يمكنكم الآن استخدام نفس المخطط الأولي لبناء

42
00:02:10,620 --> 00:02:14,860
مبان متعددة. على سبيل المثال، مجمع سكني ذو حوائط صفراء اللون

43
00:02:14,860 --> 00:02:18,300
ومبنى إداري ذو حوائط زرقاء اللون. تعمل الفئة

44
00:02:18,300 --> 00:02:21,290
بصورة مشابهة. دعونا نأخذ المثال الخاص بفئة Turtle التي

45
00:02:21,290 --> 00:02:23,980
استخدمناها حتى الآن. تحتوي هذه الفئة على معلومات عن

46
00:02:23,980 --> 00:02:26,890
،turtle، على سبيل المثال، كيف نجعل turtle تتحرك للأمام

47
00:02:26,890 --> 00:02:30,010
وكيف نجعل turtle تستدير ناحية اليمين، وغيرها. يمكننا الآن

48
00:02:30,010 --> 00:02:33,430
استخدام فئة واحدة كمخطط أولي أو قالب

49
00:02:33,430 --> 00:02:37,920
.لإنشاء ومضاعفة المثيلات مثل Brad وAngie

50
00:02:37,920 --> 00:02:40,570
هذه هي المثيلات. يمكنها عمل أمور تم

51
00:02:40,570 --> 00:02:43,290
.تعريفها داخل الفئة أو المخطط الأولي

52
00:02:43,290 --> 00:02:46,440
أمور مثل التحرك للأمام والاستدارة لليمين، ورسم

53
00:02:46,440 --> 00:02:50,160
،دائرة. ولقد رأينا مؤخرًا، فئة أخرى

54
00:02:50,160 --> 00:02:53,080
.وهذه الفئة تسمى Twilio Rest Client

55
00:02:53,080 --> 00:02:54,930
والتي قمت بكتابة الاختصار الخاص بها هنا بسبب قلة

56
00:02:54,930 --> 00:02:58,500
المساحة. تتضمن هذه الفئة معلومات عن كيفية

57
00:02:58,500 --> 00:03:00,570
الاتصال بـ Twillio وإرسال رسائل

58
00:03:00,570 --> 00:03:04,560
نصية. ومن هذا المخطط الأولي. يمكننا بعد ذلك إنشاء

59
00:03:04,560 --> 00:03:07,530
مثيل يسمى client. يمكن لـ client تنفيذ

60
00:03:07,530 --> 00:03:10,690
أمور يتم تعريفها داخل الفئة، مثل إرسال

61
00:03:10,690 --> 00:03:12,950
نصوص. وبالتالي يمكن أن تفكروا في

62
00:03:12,950 --> 00:03:16,700
الفئة كمخطط أولي، والذي يحتوي على بعض المعلومات الأساسية

63
00:03:16,700 --> 00:03:18,940
المعرفة بداخلها. ويمكن أن تفكروا في

64
00:03:18,940 --> 00:03:23,330
.الكائنات الخاصة بها، كأمثلة أو مثيلات، لذلك المخطط الأولي

