1
00:00:00,690 --> 00:00:03,300
让我们设想一下 我们想要创建一个电影网站

2
00:00:03,300 --> 00:00:06,180
差不多就像这个 现在 如果你将要在我们目前

3
00:00:06,180 --> 00:00:08,450
所学的基础上创建一个类似的网站

4
00:00:08,450 --> 00:00:11,880
第一步我们要做的就是从一个空的编程文件开始

5
00:00:11,880 --> 00:00:15,930
我们把它命名为 movies.py 我们知道

6
00:00:15,930 --> 00:00:18,400
一部电影会有很多相关信息

7
00:00:18,400 --> 00:00:22,250
比如电影的名称 它的故事情节 我们会把它加到

8
00:00:22,250 --> 00:00:25,720
我们的程序中 我们还希望对它做一些其他的事情

9
00:00:25,720 --> 00:00:29,500
比如播放电影预告片

10
00:00:29,500 --> 00:00:32,240
或者展示、打印出电影的所有相关信息 那么

11
00:00:32,240 --> 00:00:34,230
我们也会将这些函数加在我们的代码中

12
00:00:34,230 --> 00:00:37,960
目前来看 进展不错 接着试想一下

13
00:00:37,960 --> 00:00:40,260
我们要运行这个程序 并将电影的预告片

14
00:00:40,260 --> 00:00:44,860
播放出来  嗯 那么是哪部电影的预告？

15
00:00:44,860 --> 00:00:46,860
为了让程序顺利运行 我们需要给 show_trailer 函数

16
00:00:46,860 --> 00:00:51,480
提供一些信息或者参数 比如说

17
00:00:51,480 --> 00:00:53,220
在这个范例中 我们告诉它 嘿 播放

18
00:00:53,220 --> 00:00:57,870
播放《玩具总动员》的预告片 添加 youtube_url 这样似乎就行得通了

19
00:00:57,870 --> 00:01:00,090
然后让我们来试试展示

20
00:01:00,090 --> 00:01:04,370
电影的相关信息 哪部电影的信息呢？

21
00:01:04,370 --> 00:01:08,335
同样 我们需要相关信息或者函数 输入给

22
00:01:08,335 --> 00:01:12,003
show_info 函数 像是电影名称这样的参数

23
00:01:12,003 --> 00:01:16,035
它的故事情节 上映日期 评分 Youtube_url 导演

24
00:01:16,035 --> 00:01:19,950
票房 等等 现在 不知你那边进展如何

25
00:01:19,950 --> 00:01:23,730
但是 show_info 函数里的参数有点太多了

26
00:01:23,730 --> 00:01:26,140
想象一下如果我们还得给输入更多的

27
00:01:26,140 --> 00:01:29,890
电影信息会如何 比如说演员表

28
00:01:29,890 --> 00:01:33,260
或者影评等 我们真正要做的是

29
00:01:33,260 --> 00:01:35,850
给我们的电影定义一个模板 并在其中记录

30
00:01:35,850 --> 00:01:37,420
会出现在这个模板中的所有数据

31
00:01:37,420 --> 00:01:41,828
像电影名称 故事情节等信息

32
00:01:41,828 --> 00:01:46,170
还有像是 show_trailer 和 show_info 这样的函数

33
00:01:46,170 --> 00:01:50,820
告诉它 嘿 《玩具总动员》是一部电影 而《阿凡达》也是

34
00:01:50,820 --> 00:01:53,882
然后就能起作用了 我们就能播放

35
00:01:53,882 --> 00:01:59,780
《玩具总动员》的预告或者展示《阿凡达》的信息 没有其他必须的参数

36
00:02:01,880 --> 00:02:06,390
现在 完成这个的做法之一就是 只使用函数 使用定义好的模板

37
00:02:06,390 --> 00:02:10,940
然后复制几份 我们可以做一个这个模板的拷贝

38
00:02:10,940 --> 00:02:15,728
命名为 toy_story.py 然后再拷贝一份

39
00:02:15,728 --> 00:02:21,240
将它叫作 avatar.py 这样我们就可以写

40
00:02:21,240 --> 00:02:26,760
toy_story.show_trailer() 和 avatar.show_info() 这样的东西 但目前看

41
00:02:26,760 --> 00:02:29,810
这似乎并不是一个特别聪明的做法

42
00:02:29,810 --> 00:02:32,340
试想这么几种情况 比如我们要给模板

43
00:02:32,340 --> 00:02:35,220
添加更多的信息 又或者我们要重命名

44
00:02:35,220 --> 00:02:40,150
一个函数 比如将 show_trailer 改为 play_trailer 这会发生什么

45
00:02:40,150 --> 00:02:42,500
我们必须要一一修改每个拷贝

46
00:02:42,500 --> 00:02:45,490
这听起来似乎不是一种

47
00:02:45,490 --> 00:02:48,750
聪明的做法 所以我们真正需要的是

48
00:02:48,750 --> 00:02:52,690
有直接可拷贝的模板 而不要多份文件

49
00:02:52,690 --> 00:02:55,170
我们得有将某些东西定义为模板的能力

50
00:02:55,170 --> 00:02:57,660
就像我们对电影做的那样 然后

51
00:02:57,660 --> 00:03:00,480
我们可以说 嘿 玩具总动员是模板的一种

52
00:03:00,480 --> 00:03:03,660
阿凡达也是 它也是那个模板的一种

53
00:03:03,660 --> 00:03:06,940
我们需要引入新的东西

54
00:03:06,940 --> 00:03:09,670
而这个新的东西在编程中被称为“类”

55
00:03:09,670 --> 00:03:12,370
而什么是“类” 我们又该如何使用呢？

56
00:03:12,370 --> 00:03:14,850
接下来几节课 我们将一起了解它

