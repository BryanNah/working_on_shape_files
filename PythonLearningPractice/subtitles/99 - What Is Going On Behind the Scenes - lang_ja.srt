1
00:00:00,150 --> 00:00:03,370
これは前回書いたMovieクラスのコードです

2
00:00:03,370 --> 00:00:05,180
念のためお伝えしますが

3
00:00:05,180 --> 00:00:07,450
すべてのコードを見るためには

4
00:00:07,450 --> 00:00:09,970
全画面表示にするといいでしょう

5
00:00:09,970 --> 00:00:14,630
ところで私はコード行を実行する時に
裏で何が起きているか

6
00:00:14,630 --> 00:00:16,160
とても気になります

7
00:00:16,160 --> 00:00:22,420
なぜ4つの情報や引数を与えると
toy＿storyのインスタンスができるのでしょう

8
00:00:22,420 --> 00:00:26,200
情報というのは映画のタイトルやあらすじ

9
00:00:26,200 --> 00:00:30,730
またポスターや予告編へのリンクのことです

10
00:00:30,730 --> 00:00:35,100
お分かりでしょうが
最後の2つはこのままでは機能しません

11
00:00:35,100 --> 00:00:39,020
ここを単なる英語の文にしたのは

12
00:00:39,020 --> 00:00:41,900
ポスターのリンクやYouTubeのURLは

13
00:00:41,900 --> 00:00:45,640
長すぎて画面に全部表示しきれないからです

14
00:00:45,640 --> 00:00:48,200
さてこのコード行を実行すると

15
00:00:48,200 --> 00:00:50,710
最初に＿＿init＿＿関数が呼び出されます

16
00:00:50,710 --> 00:00:52,250
呼び出される＿＿init＿＿関数とは

17
00:00:52,250 --> 00:00:54,250
Movieクラスで定義した関数のことです

18
00:00:54,250 --> 00:00:58,360
そしてselfは作成されるインスタンス自体であり

19
00:00:58,360 --> 00:01:01,490
今回の場合はtoy＿storyです

20
00:01:01,910 --> 00:01:06,300
次の引数は「トイ・ストーリー」という
タイトルを表示するmovie＿titleです

21
00:01:06,300 --> 00:01:09,730
movie＿storylineはあらすじを表示し

22
00:01:09,730 --> 00:01:13,100
poster＿image変数がリンク先の画像を表示させ

23
00:01:13,100 --> 00:01:16,770
trailer＿youtube変数はリンク先の動画を表示します

24
00:01:16,770 --> 00:01:18,980
ここまではいい感じです

25
00:01:18,980 --> 00:01:25,080
＿＿init＿＿関数が呼び出されると
引数が適切な値を受け取り

26
00:01:25,080 --> 00:01:28,680
インスタンスtoy＿storyに関連する変数は

27
00:01:28,680 --> 00:01:31,350
適切に初期化されます

28
00:01:31,350 --> 00:01:32,930
ここでいう変数とは

29
00:01:32,930 --> 00:01:38,880
title、storyline、poster＿image＿url、
trailer＿youtube＿urlです

30
00:01:38,880 --> 00:01:42,750
ここでtoy＿story．storylineを実行すると

31
00:01:42,750 --> 00:01:45,910
正しい値が表示されます

32
00:01:45,910 --> 00:01:50,500
インスタンスtoy＿storyを作る時の
仕組みが分かったところで

33
00:01:50,500 --> 00:01:54,270
デザインに戻って次に進みましょう

