1
00:00:00,480 --> 00:00:02,980
質問への回答ありがとうございます

2
00:00:02,980 --> 00:00:05,670
初めてクラスを活用できましたね

3
00:00:05,670 --> 00:00:09,920
私は大学生の時理解するのに長い時間がかかりました

4
00:00:09,920 --> 00:00:12,560
関数を使いたい時は

5
00:00:12,560 --> 00:00:18,320
webbrowser．openのようなコードを書きました

6
00:00:18,320 --> 00:00:20,430
Turtleクラスのインスタンスを作りたい時は

7
00:00:20,430 --> 00:00:23,750
turtle．Turtleというコードを書きました

8
00:00:23,750 --> 00:00:27,280
この2つの構文は同じように見えます

9
00:00:27,280 --> 00:00:31,070
確かによく似ています

10
00:00:31,070 --> 00:00:35,750
2つの構文はどちらも関数と呼ばれますが

11
00:00:35,750 --> 00:00:38,680
裏でまったく違う動きをしています

12
00:00:38,680 --> 00:00:41,810
webbrowser．openを呼び出した場合は

13
00:00:41,810 --> 00:00:44,660
単に関数が呼び出されるだけです

14
00:00:44,660 --> 00:00:47,050
しかしturtle．Turtleを呼び出すと

15
00:00:47,050 --> 00:00:51,540
呼び出されるのは
Turtleクラス内で定義された＿＿init＿＿関数です

16
00:00:51,540 --> 00:00:54,200
そして＿＿init＿＿関数がメモリ内に

17
00:00:54,200 --> 00:00:58,500
新しいインスタンスのために
スペースを作って初期化します

18
00:00:58,500 --> 00:01:00,450
この2つはどちらも関数を呼び出しますが

19
00:01:00,450 --> 00:01:03,450
1つ目はopenを呼び出し

20
00:01:03,450 --> 00:01:06,100
2つ目は＿＿init＿＿関数を呼び出します

21
00:01:06,100 --> 00:01:09,430
関数はすべて同じようには作られていません

22
00:01:09,430 --> 00:01:14,210
webbrowser．openは関数を呼び出すだけです

23
00:01:14,210 --> 00:01:18,870
一方turtle．Turtleは

24
00:01:18,870 --> 00:01:25,800
メモリ内になかったスペースを作って初期化する
＿＿init＿＿関数を呼び出します

25
00:01:25,800 --> 00:01:31,190
クラスの例を1つ説明しましたが他にも見てみましょう

