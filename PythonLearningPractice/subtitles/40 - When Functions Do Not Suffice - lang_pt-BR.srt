1
00:00:00,690 --> 00:00:03,300
Vamos supor que queiramos fazer um site de filmes

2
00:00:03,300 --> 00:00:06,180
parecido com este. Se você fosse fazer

3
00:00:06,180 --> 00:00:08,450
isso com base no que vimos até agora,

4
00:00:08,450 --> 00:00:11,880
começaríamos com um arquivo de programação vazio e

5
00:00:11,880 --> 00:00:15,930
o chamaríamos de algo como movies.py. Como

6
00:00:15,930 --> 00:00:18,400
um filme tem muitos dados associados,

7
00:00:18,400 --> 00:00:22,250
como o título e sua história, adicionaríamos essas informações

8
00:00:22,250 --> 00:00:25,720
ao programa. Também desejaríamos fazer coisas com

9
00:00:25,720 --> 00:00:29,500
nossos filmes, como mostrar o trailer ou

10
00:00:29,500 --> 00:00:32,240
mostrar e imprimir todas as informações do filme. Para isso,

11
00:00:32,240 --> 00:00:34,230
também adicionaríamos essas funções ao código

12
00:00:34,230 --> 00:00:37,960
. Até aqui, tudo bem. Imagine ainda que

13
00:00:37,960 --> 00:00:40,260
vamos executar esse programa e

14
00:00:40,260 --> 00:00:44,860
reproduzir o trailer do filme. Mas o trailer de qual filme?

15
00:00:44,860 --> 00:00:46,860
Para que isso funcione, precisaríamos fornecer

16
00:00:46,860 --> 00:00:51,480
à função show_trailer algumas informações ou argumentos, como mostrado aqui.

17
00:00:51,480 --> 00:00:53,220
Neste caso, estamos dizendo para

18
00:00:53,220 --> 00:00:57,870
reproduzir a URL do youtube do filme Toy Story. Isso parece ser razoavelmente

19
00:00:57,870 --> 00:01:00,090
gerenciável. Vamos tentar agora imprimir

20
00:01:00,090 --> 00:01:04,370
as informações de um filme. Mas as informações de que filme?

21
00:01:04,370 --> 00:01:08,335
Novamente, seria necessário fornecer algum tipo de informação ou argumento para a

22
00:01:08,335 --> 00:01:12,003
função show_info. Argumentos como title,

23
00:01:12,003 --> 00:01:16,035
storyline, release_date, rating, youtube_url, director,

24
00:01:16,035 --> 00:01:19,950
box_office, etc. Não sei quanto a você,

25
00:01:19,950 --> 00:01:23,730
mas essa função show_info já está ficando complexa demais

26
00:01:23,730 --> 00:01:26,140
para mim. Imagine o que aconteceria se fosse necessário

27
00:01:26,140 --> 00:01:29,890
fornecer mais informações, como o elenco

28
00:01:29,890 --> 00:01:33,260
ou as críticas do filme. Será necessário

29
00:01:33,260 --> 00:01:35,850
definir um modelo para nosso filme e registrar

30
00:01:35,850 --> 00:01:37,420
todos os dados que precisam constar

31
00:01:37,420 --> 00:01:41,828
desse modelo. Dados como o título e a história do filme, além de

32
00:01:41,828 --> 00:01:46,170
funções como show_trailer e show_information. Depois, teremos que

33
00:01:46,170 --> 00:01:50,820
informar que Toy Story é um filme, assim como Avatar.

34
00:01:50,820 --> 00:01:53,882
E então poder usar o recurso para exibição do trailer de Toy

35
00:01:53,882 --> 00:01:59,780
Story ou das informações sobre Avatar. Nenhum argumento é necessário.

36
00:02:01,880 --> 00:02:06,390
Uma maneira de fazer isso usando apenas as funções é fazer várias cópias do modelo

37
00:02:06,390 --> 00:02:10,940
que definimos. Faríamos uma cópia

38
00:02:10,940 --> 00:02:15,728
desse modelo e chamaríamos de toy_story.py, e faríamos outra cópia desse

39
00:02:15,728 --> 00:02:21,240
modelo com o nome de avatar.py. Agora, poderemos criar comandos como

40
00:02:21,240 --> 00:02:26,760
toy_story.show_trailer e avatar.show_info. Mas

41
00:02:26,760 --> 00:02:29,810
isso não parece ser uma solução muito inteligente.

42
00:02:29,810 --> 00:02:32,340
Imagine o que aconteceria se fosse necessário adicionar mais

43
00:02:32,340 --> 00:02:35,220
dados ao modelo. Ou se você tivesse que renomear uma

44
00:02:35,220 --> 00:02:40,150
das funções. Por exemplo, renomear show_trailer para play_trailer. Se isso acontecer,

45
00:02:40,150 --> 00:02:42,500
termos que fazer essas alterações em

46
00:02:42,500 --> 00:02:45,490
cada cópia criada. Isso não parece ser uma estratégia

47
00:02:45,490 --> 00:02:48,750
muito inteligente. Precisamos arranjar uma

48
00:02:48,750 --> 00:02:52,690
maneira de fazer as cópias de um modelo sem vários arquivos.

49
00:02:52,690 --> 00:02:55,170
É necessário definir um modelo,

50
00:02:55,170 --> 00:02:57,660
como fizemos para os filmes, e informar que

51
00:02:57,660 --> 00:03:00,480
Toy Story é um tipo

52
00:03:00,480 --> 00:03:03,660
desse modelo, assim como Avatar. Avatar também é

53
00:03:03,660 --> 00:03:06,940
um tipo desse modelo. Precisamos de algo novo,

54
00:03:06,940 --> 00:03:09,670
e essa novidade em programação se chama

55
00:03:09,670 --> 00:03:12,370
classe. O que são classes e como

56
00:03:12,370 --> 00:03:14,850
usá-las? Vamos descobrir nas próximas lições.

